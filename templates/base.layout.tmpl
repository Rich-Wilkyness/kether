{{define "base"}}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
    <title>My nice page</title>
    <!-- order of css is important - we want our css to override the other libraries -->
    <!-- Bootstrap css-->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous"></head>
    <!-- datepicker styles -- https://mymth.github.io/vanillajs-datepicker/#/ -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/css/datepicker-bs5.min.css">
    <!-- notie styles -->
    <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
    <!-- My Styles -->
    <link rel="stylesheet" href="/static/css/styles.css" type="text/css">
</head>


<body>
    <!-- bootstrap nav -->
    <nav class="navbar navbar-expand-lg bg-body-tertiary bg-dark border-bottom border-body" data-bs-theme="dark">
        <div class="container-fluid">
          <a class="navbar-brand" href="/">Navbar</a>
          <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
          </button>
          <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">

              <li class="nav-item">
                <a class="nav-link active" aria-current="page" href="/">Home</a>
              </li>

              <li class="nav-item">
                <a class="nav-link" href="/classes">Classes</a>
              </li>

              <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" role="button" data-bs-toggle="dropdown" id="navbarDropdown" href="#" aria-expanded="false" aria-haspopup="true">
                  Build
                </a>
                <ul class="dropdown-menu">
                  <li><a class="dropdown-item" href="/make-test">Create Test</a></li>
                  <li><a class="dropdown-item" href="/make-question">Create Question</a></li>
                </ul>
              </li>

              <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" role="button" data-bs-toggle="dropdown" id="navbarDropdown" href="#" aria-expanded="false" aria-haspopup="true">
                  Edit
                </a>
                <ul class="dropdown-menu">
                  <li><a class="dropdown-item" href="/edit-tests">Tests</a></li>
                  <li><a class="dropdown-item" href="/edit-questions">Questions</a></li>
                </ul>
              </li>
              
              

            </ul>
          </div>
        </div>
      </nav>
    {{block "css" .}}

    {{end}}

    {{block "content" .}}

    {{end}}

    <!-- bootstrap footer -->
    <div class="row my-footer">

    </div>

      <!-- ------------------------------all my js imports---------------------------------- -->
        <!-- Bootstrap popper, for dropdowns, popovers, or tooltips. optional and takes up kilobytes. so if you dont use it remove it or comment out. -->
        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js" integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy" crossorigin="anonymous"></script>
        <!-- notie js -->
        <script src="https://unpkg.com/notie"></script>
        <!-- sweetalert2 js helps with visually appealing alerts, warnings, and successes -->
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <!-- datepicker js not sure i need this for my learning app -->
        <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/js/datepicker-full.min.js"></script>

      {{block "js" .}}

      {{end}}


      <script>
        // Example starter JavaScript for disabling form submissions if there are invalid fields
  
        let attention = Prompt();
  
        (() => {
          'use strict'
          window.addEventListener('load', function () {
  
          // Fetch all the forms we want to apply custom Bootstrap validation styles to
          const forms = document.querySelectorAll('.needs-validation')
  
          // Loop over them and prevent submission
          Array.from(forms).forEach(form => {
            form.addEventListener('submit', event => {
              if (!form.checkValidity()) {
                event.preventDefault()
                event.stopPropagation()
              }
  
              form.classList.add('was-validated')
            }, false)
          })
        }, false);
        })()
  
        
  
        
  
        function notify(msg, alertType) {
          notie.alert({
            type: alertType,
            text: msg,
          })
        }

        function notifyModal(title, text, icon, confirmationButtonText) {
          Swal.fire({
            title: title,
            html: text,
            icon: icon,
            confirmButtonText: confirmationButtonText
          })
        }

        {{with .Error}} // this is an if statement. if there is a value in Error, then do the following
        notify("{{.}}", "error")
        {{end}}
        {{with .Flash}} 
        notify("{{.}}", "success")
        {{end}}
        {{with .Warning}} 
        notify("{{.}}", "warning")
        {{end}}
  
        function Prompt() {
          let toast = function(c) {
            const {
              msg = "",
              icon = "success",
              position = "top-end",
            } = c;
  
            const Toast = Swal.mixin({
              toast: true,
              title: msg,
              position: position,
              icon: icon,
              showConfirmButton: false,
              timer: 3000,
              timerProgressBar: true,
              didOpen: (toast) => {
                toast.onmouseenter = Swal.stopTimer;
                toast.onmouseleave = Swal.resumeTimer;
              }
            });
            Toast.fire({});
  
          }
  
          let success = function(c) {
            const {
              msg = "",
              title = "",
              footer = "",
            } = c;
            Swal.fire({
              icon: "success",
              title: title,
              text: msg,
              footer: footer,
            });
          }
          
          let error = function(c) {
            const {
              msg = "",
              title = "",
              footer = "",
            } = c;
            Swal.fire({
              icon: "error",
              title: title,
              text: msg,
              footer: footer,
            });
          }
  
          async function custom(c) {
            const {
              msg = "",
              title = "",
            } = c;
  
            const { value: result } = await Swal.fire({
              title: title,
              html: msg,
              backdrop: false,
              focusConfirm: false,
              showCancelButton: true,
              willOpen: () => {
                if (c.willOpen !== undefined) {
                  c.willOpen()
                }
              },
              preConfirm: () => {
                return [
                  document.getElementById("start").value,
                  document.getElementById("end").value
                ];
              },
              didOpen: () => {
                if (c.didOpen !== undefined) {
                  c.didOpen()
                }
              }
            })


            // if someone fills out the form and it is not empty we are going to do stuff
            if (result) {
              if (result.dismiss !== Swal.DismissReason.cancel) {
                if (result.value !== "") {
                  if (c.callback !== undefined) {
                    c.callback(result)
                  }
                } else {
                  c.callback(false) // this means dont do anything
                }
              } else {
                c.callback(false)
              }
          }
        }
  
          return {
            toast: toast,
            success: success,
            error: error,
            custom: custom,
          }
        }
      </script>
</body>
</html>
{{end}}